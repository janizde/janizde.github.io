{"version":3,"sources":["webpack:///bundle.f1db52ead2aef6b9a5e0.js","webpack:///./src/common/Point.js","webpack:///./src/common/State.js","webpack:///./src/controls/index.js","webpack:///./src/common/Cluster.js","webpack:///./src/hierarchical/Cluster.js","webpack:///./src/hierarchical/ProximityMatrix.js","webpack:///./src/index.js","webpack:///./src/hierarchical/index.js","webpack:///./src/k-means/index.js"],"names":["webpackJsonp","118","module","exports","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","default","s","_class","_temp","Point","pos","id","arguments","undefined","this","cluster","color","noStroke","fill","ellipse","x","y","get","OPACITY","c","red","green","blue","numPoints","points","random","width","height","push","createVector","numHotspots","noise","createRandomPoints","randomVector","distanceBase","threshold","hotspots","added","_added","findIndex","h","dist","strength","hotspotIdx","Math","floor","angle","TWO_PI","direction","sin","cos","distance","mult","119","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_events","_events2","obj","__esModule","State","_EventEmitter","states","_this","getPrototypeOf","map","isCurrent","order","isFinished","emit","currentId","current","next","currentIdx","callback","find","122","_defineProperty","createControls","onUpdate","config","ALGORITHM","settings","_quicksettings2","document","getElementById","setDraggable","createUpdateCallback","title","_typeof","hasOwnProperty","oldValue","setControlValue","name","control","_controls","selectedIndex","setValue","options","label","mergeConfig","newConfig","merged","keys","forEach","addDropDown","showControl","hideControl","addRange","addButton","Symbol","iterator","_extends","assign","source","_quicksettings","_kMeans","_hierarchical","307","Cluster","center","308","clusterIdsGenerator","regeneratorRuntime","wrap","_context","prev","stop","_marked","mark","clusterIds","point","children","parent","radius","retrievePoints","createCenter","createRadius","reduce","child","concat","p","_this2","r","max","drawMode","drawShape","ellipseMode","RADIUS","CENTER","draw","noFill","stroke","strokeWeight","other","colorMode","HSB","mostPoints","hue","RGB","lock","matrix","thisPoints","otherPoints","min","Infinity","pi","j","pj","prox","sum","clusters","309","ProximityMatrix","set","310","_interopRequireDefault","_p","_p2","_hierarchical2","_kMeans2","_controls2","currentSketch","createDefaultSketch","remove","87","createSketch","defaultConfig","CANVAS_SIZE","NUM_POINTS","NUM_HOTSPOTS","HOTSPOT_NOISE","NUM_CLUSTERS","DRAW_MODE","PROXIMITY_METHOD","clusterer","closest","_ci","_cj","ci","cj","clusterProximityMatrix","t0","proximityCompleteLink","proximityMatrix","abrupt","proximityAverage","proximityCentroid","proximitySingleLink","merge","splice","state","setupControls","instruction","createP","buttonNext","createButton","onClick","mousePressed","on","html","nextIfCurrent","_Point2","_Cluster2","_State2","generator","clustersLabel","setup","createCanvas","createHotspotPoints","createInitialClusters","_ProximityMatrix2","createFromPoints","init","background","validatePos","lastMousePointPosition","mouseX","mouseY","mouseMoved","mouseReleased","_State","_ProximityMatrix","_Point","_Cluster","88","ACTIONS_PER_FRAME","assignPoints","changes","_loop","_context2","hasChanged","delegateYield","updateClusterCenters","_loop2","_i","_ret2","_context4","clusterPoints","_context3","filter","acc","_context5","createClusters","createCustomCluster"],"mappings":"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","file":"bundle.f1db52ead2aef6b9a5e0.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 118:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = function (s) {\n  var _class, _temp;\n\n  return _temp = _class = function () {\n    function Point(pos) {\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      _classCallCheck(this, Point);\n\n      this.id = id;\n      this.pos = pos;\n      this.cluster = null;\n    }\n\n    _createClass(Point, [{\n      key: \"draw\",\n      value: function draw() {\n        var color = this.color;\n        s.noStroke();\n        s.fill(color);\n        s.ellipse(this.pos.x, this.pos.y, 5, 5);\n      }\n    }, {\n      key: \"color\",\n      get: function get() {\n        if (!this.cluster) {\n          return s.color(255, 255, 255, Point.OPACITY);\n        }\n\n        var c = this.cluster.color;\n        return s.color(s.red(c), s.green(c), s.blue(c), Point.OPACITY);\n      }\n    }], [{\n      key: \"createRandomPoints\",\n      value: function createRandomPoints(numPoints) {\n        var points = [];\n        for (var i = 0; i < numPoints; ++i) {\n          var x = s.random(s.width);\n          var y = s.random(s.height);\n          points.push(new Point(s.createVector(x, y), points.length));\n        }\n\n        return points;\n      }\n    }, {\n      key: \"createHotspotPoints\",\n      value: function createHotspotPoints(numPoints, numHotspots, noise) {\n        if (numHotspots < 1) {\n          return Point.createRandomPoints(numPoints);\n        }\n\n        var randomVector = function randomVector() {\n          return s.createVector(s.random(s.width), s.random(s.height));\n        };\n        var distanceBase = s.width / numHotspots;\n\n        var threshold = s.width / (numHotspots * 2);\n        var hotspots = [];\n\n        var _loop = function _loop(_added) {\n          var pos = randomVector();\n\n          if (hotspots.findIndex(function (h) {\n            return pos.dist(h.pos) < threshold;\n          }) < 0) {\n            hotspots.push({\n              pos: pos,\n              strength: s.random()\n            });\n\n            _added++;\n          }\n          added = _added;\n        };\n\n        for (var added = 0; added < numHotspots;) {\n          _loop(added);\n        }\n\n        var points = [];\n        for (var added = 0; added < numPoints;) {\n          if (s.random() < noise) {\n            points.push(new Point(s.createVector(s.random(s.width), s.random(s.height)), points.length));\n            added++;\n            continue;\n          }\n\n          var hotspotIdx = Math.floor(s.random(hotspots.length));\n          var h = hotspots[hotspotIdx];\n\n          if (s.random() > h.strength) {\n            continue;\n          }\n\n          var angle = s.random(s.TWO_PI);\n          var direction = s.createVector(s.sin(angle), s.cos(angle));\n          var distance = distanceBase * s.random() * h.strength;\n          direction.mult(distance);\n          var _pos = s.createVector(h.pos.x + direction.x, h.pos.y + direction.y);\n\n          points.push(new Point(_pos, points.length));\n          added++;\n        }\n\n        return points;\n      }\n    }]);\n\n    return Point;\n  }(), _class.OPACITY = 200, _temp;\n};\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/***/ }),\n\n/***/ 119:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = __webpack_require__(304);\n\nvar _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar State = function (_EventEmitter) {\n  _inherits(State, _EventEmitter);\n\n  function State(states) {\n    _classCallCheck(this, State);\n\n    var _this = _possibleConstructorReturn(this, (State.__proto__ || Object.getPrototypeOf(State)).call(this));\n\n    _this.states = states.map(function (s, i) {\n      return {\n        id: s,\n        isCurrent: false,\n        order: i\n      };\n    });\n\n    _this.isFinished = false;\n    return _this;\n  }\n\n  _createClass(State, [{\n    key: 'init',\n    value: function init() {\n      if (this.states.length > 0) {\n        this.states[0].isCurrent = true;\n        this.emit('ENTER_' + this.states[0].id);\n      }\n    }\n  }, {\n    key: 'nextIfCurrent',\n    value: function nextIfCurrent(currentId) {\n      var current = this.current;\n\n      if (!current || current.id !== currentId) {\n        return;\n      }\n\n      this.next();\n    }\n  }, {\n    key: 'next',\n    value: function next() {\n      var currentIdx = this.states.findIndex(function (s) {\n        return s.isCurrent === true;\n      });\n\n      if (currentIdx > -1) {\n        this.states[currentIdx].isCurrent = false;\n        this.emit('LEAVE_' + this.states[currentIdx].id);\n      }\n\n      if (currentIdx + 2 > this.states.length) {\n        this.isFinished = true;\n        this.emit('FINISHED');\n        return;\n      }\n\n      this.states[currentIdx + 1].isCurrent = true;\n      this.emit('ENTER_' + this.states[currentIdx + 1].id);\n    }\n  }, {\n    key: 'isCurrent',\n    value: function isCurrent(id) {\n      var current = this.current;\n      return current && current.id === id;\n    }\n  }, {\n    key: 'doIfState',\n    value: function doIfState(id, callback) {\n      if (this.isCurrent(id)) {\n        callback();\n      }\n    }\n  }, {\n    key: 'current',\n    get: function get() {\n      return this.states.find(function (s) {\n        return s.isCurrent === true;\n      });\n    }\n  }]);\n\n  return State;\n}(_events2.default);\n\nexports.default = State;\n\n/***/ }),\n\n/***/ 122:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = createControls;\n\nvar _quicksettings = __webpack_require__(305);\n\nvar _quicksettings2 = _interopRequireDefault(_quicksettings);\n\nvar _kMeans = __webpack_require__(88);\n\nvar _hierarchical = __webpack_require__(87);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction createControls(onUpdate) {\n  var config = _extends({}, _kMeans.defaultConfig, {\n    ALGORITHM: 'K_MEANS'\n  });\n\n  var settings = _quicksettings2.default.create(null, null, 'Clustering Parameters', document.getElementById('quicksettings'));\n  settings.setDraggable(false);\n\n  var createUpdateCallback = function createUpdateCallback(title) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return function (value) {\n      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.hasOwnProperty('value')) {\n        value = value.value;\n      }\n\n      var oldValue = config[title];\n      config = _extends({}, config, _defineProperty({}, title, value));\n\n      if (callback) {\n        callback(value, oldValue);\n      }\n    };\n  };\n\n  var setControlValue = function setControlValue(name, value) {\n    var control = settings._controls[name].control;\n    if (control.selectedIndex === undefined) {\n      settings.setValue(name, value);\n      return;\n    }\n\n    var options = control.options;\n\n    for (var i = 0; i < options.length; ++i) {\n      if (options[i].label === value) {\n        settings.setValue(name, i);\n        break;\n      }\n    }\n  };\n\n  var mergeConfig = function mergeConfig(newConfig) {\n    var merged = _extends({}, config);\n    Object.keys(newConfig).forEach(function (key) {\n      merged[key] = newConfig[key];\n      setControlValue(key, merged[key]);\n    });\n\n    config = merged;\n  };\n\n  settings.addDropDown('ALGORITHM', ['K_MEANS', 'HIERARCHICAL'], createUpdateCallback('ALGORITHM', function (value, oldValue) {\n    if (oldValue === 'HIERARCHICAL' && value === 'K_MEANS') {\n      settings.showControl('ACTIONS_PER_FRAME');\n      settings.hideControl('DRAW_MODE');\n      settings.hideControl('PROXIMITY_METHOD');\n      mergeConfig(_kMeans.defaultConfig);\n    } else if (oldValue === 'K_MEANS' && value === 'HIERARCHICAL') {\n      settings.hideControl('ACTIONS_PER_FRAME');\n      settings.showControl('DRAW_MODE');\n      settings.showControl('PROXIMITY_METHOD');\n      mergeConfig(_hierarchical.defaultConfig);\n    }\n  }));\n\n  settings.addDropDown('DRAW_MODE', ['CIRCLES', 'COLORS'], createUpdateCallback('DRAW_MODE'));\n  settings.addDropDown('PROXIMITY_METHOD', ['SINGLE_LINK', 'COMPLETE_LINK', 'AVERAGE', 'CENTROIDS'], createUpdateCallback('PROXIMITY_METHOD'));\n  settings.addRange('NUM_CLUSTERS', 0, 100, 5, 1, createUpdateCallback('NUM_CLUSTERS'));\n  settings.addRange('NUM_POINTS', 0, 5000, 200, 10, createUpdateCallback('NUM_POINTS'));\n  settings.addRange('NUM_HOTSPOTS', 0, 20, 5, 1, createUpdateCallback('NUM_HOTSPOTS'));\n  settings.addRange('HOTSPOT_NOISE', 0, 1, .05, .01, createUpdateCallback('HOTSPOT_NOISE'));\n  settings.addRange('ACTIONS_PER_FRAME', 1, 20, 10, 1, createUpdateCallback('ACTIONS_PER_FRAME'));\n  settings.addRange('CANVAS_SIZE', 500, 1000, 500, 10, createUpdateCallback('CANVAS_SIZE'));\n\n  settings.hideControl('DRAW_MODE');\n  settings.hideControl('PROXIMITY_METHOD');\n\n  var setConfig = function setConfig(newConfig) {\n    Object.keys(newConfig).forEach(function (key) {\n      var val = newConfig[key];\n      settings.setValue(key, val);\n    });\n  };\n\n  settings.addButton('APPLY', function () {\n    return onUpdate(_extends({}, config));\n  });\n}\n\n/***/ }),\n\n/***/ 307:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = function (s) {\n  return function () {\n    function Cluster(center, color) {\n      _classCallCheck(this, Cluster);\n\n      this.center = center;\n      this.color = color;\n    }\n\n    _createClass(Cluster, [{\n      key: \"draw\",\n      value: function draw() {\n        s.fill(this.color);\n        s.ellipse(this.center.x, this.center.y, 10, 10);\n      }\n    }]);\n\n    return Cluster;\n  }();\n};\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/***/ }),\n\n/***/ 308:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = function (s) {\n  var _marked = [clusterIdsGenerator].map(regeneratorRuntime.mark);\n\n  function clusterIdsGenerator() {\n    var i;\n    return regeneratorRuntime.wrap(function clusterIdsGenerator$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            i = 0;\n\n          case 1:\n            if (false) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return i;\n\n          case 4:\n            ++i;\n            _context.next = 1;\n            break;\n\n          case 7:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _marked[0], this);\n  }\n\n  var clusterIds = clusterIdsGenerator();\n\n  return function () {\n    function Cluster(color) {\n      var point = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      _classCallCheck(this, Cluster);\n\n      this.id = clusterIds.next().value;\n      this.color = color;\n      this.children = [];\n      this.parent = null;\n      this.point = point;\n\n      this.points = [];\n      this.center = null;\n      this.radius = 0;\n    }\n\n    _createClass(Cluster, [{\n      key: 'lock',\n      value: function lock() {\n        this.points = this.retrievePoints();\n        this.center = this.createCenter();\n        this.radius = this.createRadius();\n      }\n    }, {\n      key: 'retrievePoints',\n      value: function retrievePoints() {\n        if (this.point) {\n          return [this.point];\n        }\n\n        return this.children.reduce(function (points, child) {\n          return points.concat(child.retrievePoints());\n        }, []);\n      }\n    }, {\n      key: 'createCenter',\n      value: function createCenter() {\n        var _this = this;\n\n        if (this.point) {\n          return this.point.pos;\n        }\n\n        return this.points.reduce(function (center, p) {\n          return s.createVector(center.x + p.pos.x / _this.points.length, center.y + p.pos.y / _this.points.length);\n        }, s.createVector(0, 0));\n      }\n    }, {\n      key: 'createRadius',\n      value: function createRadius(center) {\n        var _this2 = this;\n\n        return this.points.reduce(function (r, p) {\n          return Math.max(r, p.pos.dist(_this2.center));\n        }, 0);\n      }\n    }, {\n      key: 'draw',\n      value: function draw() {\n        var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var drawMode = arguments[1];\n        var drawShape = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        color = drawMode === 'CIRCLES' || color === null ? this.color : color;\n\n        if (this.point) {\n          s.fill(color);\n          s.noStroke();\n          s.ellipse(this.point.pos.x, this.point.pos.y, 5, 5);\n        } else {\n          if (drawMode === 'CIRCLES') {\n            s.fill(s.color(s.red(color), s.green(color), s.blue(color), 50));\n\n            s.ellipseMode(s.RADIUS);\n            s.ellipse(this.center.x, this.center.y, this.radius, this.radius);\n            s.ellipseMode(s.CENTER);\n          }\n\n          this.children.forEach(function (c) {\n            return c.draw(color, drawMode);\n          });\n\n          if (drawShape) {\n            s.noFill();\n            s.stroke(this.color);\n            s.strokeWeight(2);\n            s.ellipseMode(s.RADIUS);\n            s.ellipse(this.center.x, this.center.y, this.radius);\n            s.ellipseMode(s.CENTER);\n            s.noStroke();\n            s.strokeWeight(0);\n          }\n        }\n      }\n    }, {\n      key: 'merge',\n      value: function merge(other) {\n        s.colorMode(s.HSB, 255, 255, 255, 255);\n        var mostPoints = this.points.length > other.points.length ? this : other;\n        var color = s.color(s.hue(mostPoints.color), 255, 255, 255);\n\n        var cluster = new Cluster(color);\n        s.colorMode(s.RGB, 255, 255, 255, 255);\n        cluster.children.push(this);\n        cluster.children.push(other);\n\n        this.parent = cluster;\n        other.parent = cluster;\n\n        cluster.lock();\n        return cluster;\n      }\n    }, {\n      key: 'proximitySingleLink',\n      value: function proximitySingleLink(other, matrix) {\n        var thisPoints = this.points;\n        var otherPoints = other.points;\n\n        var min = Infinity;\n        for (var i = 0; i < thisPoints.length; ++i) {\n          var pi = thisPoints[i];\n          for (var j = 0; j < otherPoints.length; ++j) {\n            var pj = otherPoints[j];\n            var prox = matrix.get(pi.id, pj.id);\n\n            if (prox < min) {\n              min = prox;\n            }\n          }\n        }\n\n        return min;\n      }\n    }, {\n      key: 'proximityCompleteLink',\n      value: function proximityCompleteLink(other, matrix) {\n        var thisPoints = this.points;\n        var otherPoints = other.points;\n\n        var max = 0;\n        for (var i = 0; i < thisPoints.length; ++i) {\n          var pi = thisPoints[i];\n          for (var j = 0; j < otherPoints.length; ++j) {\n            var pj = otherPoints[j];\n            var prox = matrix.get(pi.id, pj.id);\n\n            if (prox > max) {\n              max = prox;\n            }\n          }\n        }\n\n        return max;\n      }\n    }, {\n      key: 'proximityAverage',\n      value: function proximityAverage(other, matrix) {\n        var sum = 0;\n        for (var i = 0; i < this.points.length; ++i) {\n          var pi = this.points[i];\n          for (var j = 0; j < other.points.length; ++j) {\n            var pj = other.points[j];\n            sum += matrix.get(pi.id, pj.id);\n          }\n        }\n\n        return sum / (this.points.length * other.points.length);\n      }\n    }, {\n      key: 'proximityCentroid',\n      value: function proximityCentroid(other) {\n        return this.center.dist(other.center);\n      }\n    }], [{\n      key: 'createInitialClusters',\n      value: function createInitialClusters(points) {\n        s.colorMode(s.HSB, 255, 255, 255, 255);\n        var clusters = points.map(function (p) {\n          var c = new Cluster(s.color(Math.floor(s.random(256)), 255, 255, 255), p);\n          c.lock();\n          return c;\n        });\n        s.colorMode(s.RGB, 255, 255, 255, 255);\n        return clusters;\n      }\n    }]);\n\n    return Cluster;\n  }();\n};\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/***/ }),\n\n/***/ 309:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ProximityMatrix = function () {\n  function ProximityMatrix() {\n    var matrix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ProximityMatrix);\n\n    this.matrix = matrix;\n  }\n\n  _createClass(ProximityMatrix, [{\n    key: \"get\",\n    value: function get(i, j) {\n      if (this.matrix.hasOwnProperty(i) && this.matrix[i].hasOwnProperty(j)) {\n        return this.matrix[i][j];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"set\",\n    value: function set(i, j, value) {\n      if (!this.matrix.hasOwnProperty(i)) {\n        this.matrix[i] = {};\n      }\n\n      this.matrix[i][j] = value;\n\n      if (!this.matrix.hasOwnProperty(j)) {\n        this.matrix[j] = {};\n      }\n\n      this.matrix[j][i] = value;\n    }\n  }], [{\n    key: \"createFromPoints\",\n    value: function createFromPoints(points) {\n      var matrix = new ProximityMatrix();\n\n      for (var i = 0; i < points.length; ++i) {\n        var pi = points[i];\n        for (var j = 0; j <= i; ++j) {\n          var pj = points[j];\n          var dist = pi.pos.dist(pj.pos);\n\n          matrix.set(pi.id, pj.id, dist);\n        }\n      }\n\n      return matrix;\n    }\n  }]);\n\n  return ProximityMatrix;\n}();\n\nexports.default = ProximityMatrix;\n\n/***/ }),\n\n/***/ 310:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _p = __webpack_require__(86);\n\nvar _p2 = _interopRequireDefault(_p);\n\n__webpack_require__(121);\n\n__webpack_require__(120);\n\nvar _hierarchical = __webpack_require__(87);\n\nvar _hierarchical2 = _interopRequireDefault(_hierarchical);\n\nvar _kMeans = __webpack_require__(88);\n\nvar _kMeans2 = _interopRequireDefault(_kMeans);\n\nvar _controls = __webpack_require__(122);\n\nvar _controls2 = _interopRequireDefault(_controls);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar currentSketch = new _p2.default((0, _kMeans.createDefaultSketch)());\n\n(0, _controls2.default)(function (config) {\n  currentSketch.remove();\n\n  switch (config.ALGORITHM) {\n    case 'K_MEANS':\n      currentSketch = new _p2.default((0, _kMeans2.default)(config));\n      break;\n\n    case 'HIERARCHICAL':\n      currentSketch = new _p2.default((0, _hierarchical2.default)(config));\n      break;\n  }\n});\n\n/***/ }),\n\n/***/ 87:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultConfig = undefined;\nexports.createDefaultSketch = createDefaultSketch;\nexports.default = createSketch;\n\nvar _State = __webpack_require__(119);\n\nvar _State2 = _interopRequireDefault(_State);\n\nvar _ProximityMatrix = __webpack_require__(309);\n\nvar _ProximityMatrix2 = _interopRequireDefault(_ProximityMatrix);\n\nvar _Point = __webpack_require__(118);\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _Cluster = __webpack_require__(308);\n\nvar _Cluster2 = _interopRequireDefault(_Cluster);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultConfig = exports.defaultConfig = {\n  CANVAS_SIZE: 750,\n  NUM_POINTS: 0,\n  NUM_HOTSPOTS: 5,\n  HOTSPOT_NOISE: .05,\n  NUM_CLUSTERS: 5,\n  DRAW_MODE: 'CIRCLES',\n  PROXIMITY_METHOD: 'SINGLE_LINK'\n};\n\nfunction createDefaultSketch() {\n  return createSketch(defaultConfig);\n}\n\nfunction createSketch(config) {\n  var CANVAS_SIZE = config.CANVAS_SIZE,\n      NUM_POINTS = config.NUM_POINTS,\n      NUM_HOTSPOTS = config.NUM_HOTSPOTS,\n      HOTSPOT_NOISE = config.HOTSPOT_NOISE,\n      NUM_CLUSTERS = config.NUM_CLUSTERS,\n      DRAW_MODE = config.DRAW_MODE,\n      PROXIMITY_METHOD = config.PROXIMITY_METHOD;\n\n\n  return function (s) {\n    var _marked = [clusterer].map(regeneratorRuntime.mark);\n\n    var Point = (0, _Point2.default)(s);\n    var Cluster = (0, _Cluster2.default)(s);\n    var state = new _State2.default(['CREATE_POINTS', 'DO_CLUSTERING', 'FINISHED_CLUSTERING']);\n\n    var points = [];\n    var clusters = [];\n    var generator = void 0;\n    var proximityMatrix = null;\n    var clusterProximityMatrix = null;\n    var clustersLabel = null;\n\n    s.setup = function () {\n      var canvas = s.createCanvas(CANVAS_SIZE, CANVAS_SIZE);\n      canvas.parent('canvas-container');\n\n      setupControls();\n\n      state.on('ENTER_CREATE_POINTS', function () {\n        if (NUM_POINTS < 1) {\n          return;\n        }\n\n        if (NUM_HOTSPOTS < 1) {\n          points = Point.createRandomPoints(NUM_POINTS);\n        } else {\n          points = Point.createHotspotPoints(NUM_POINTS, NUM_HOTSPOTS, HOTSPOT_NOISE);\n        }\n      });\n\n      state.on('LEAVE_CREATE_POINTS', function () {\n        clusters = Cluster.createInitialClusters(points);\n        proximityMatrix = _ProximityMatrix2.default.createFromPoints(points);\n        clusterProximityMatrix = new _ProximityMatrix2.default();\n\n        clustersLabel = s.createP();\n        clustersLabel.parent('controls');\n      });\n\n      state.init();\n\n      generator = clusterer();\n    };\n\n    s.draw = function () {\n      s.background(s.color(0, 0, 0, 255));\n\n      if (state.isCurrent('CREATE_POINTS')) {\n        points.forEach(function (p) {\n          return p.draw();\n        });\n      } else {\n        var drawShape = DRAW_MODE === 'COLORS' && state.isCurrent('FINISHED_CLUSTERING');\n        clusters.forEach(function (c) {\n          return c.draw(null, DRAW_MODE, drawShape);\n        });\n        clustersLabel.html(clusters.length + ' Clusters');\n        generator.next();\n      }\n    };\n\n    function clusterer() {\n      var closest, i, j, _ci, _cj, prox, ci, cj, merged;\n\n      return regeneratorRuntime.wrap(function clusterer$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(clusters.length > NUM_CLUSTERS)) {\n                _context.next = 39;\n                break;\n              }\n\n              closest = {\n                i: null,\n                j: null,\n                prox: Infinity\n              };\n              i = 0;\n\n            case 3:\n              if (!(i < clusters.length)) {\n                _context.next = 29;\n                break;\n              }\n\n              j = 0;\n\n            case 5:\n              if (!(j < i)) {\n                _context.next = 26;\n                break;\n              }\n\n              _ci = clusters[i];\n              _cj = clusters[j];\n              prox = clusterProximityMatrix.get(_ci.id, _cj.id);\n\n              if (!(prox === null)) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.t0 = PROXIMITY_METHOD;\n              _context.next = _context.t0 === 'COMPLETE_LINK' ? 13 : _context.t0 === 'AVERAGE' ? 15 : _context.t0 === 'CENTROIDS' ? 17 : 19;\n              break;\n\n            case 13:\n              prox = _ci.proximityCompleteLink(_cj, proximityMatrix);\n              return _context.abrupt('break', 21);\n\n            case 15:\n              prox = _ci.proximityAverage(_cj, proximityMatrix);\n              return _context.abrupt('break', 21);\n\n            case 17:\n              prox = _ci.proximityCentroid(_cj);\n              return _context.abrupt('break', 21);\n\n            case 19:\n              prox = _ci.proximitySingleLink(_cj, proximityMatrix);\n              return _context.abrupt('break', 21);\n\n            case 21:\n\n              clusterProximityMatrix.set(_ci.id, _cj.id, prox);\n\n            case 22:\n\n              if (prox < closest.prox) {\n                closest = { i: i, j: j, prox: prox };\n              }\n\n            case 23:\n              ++j;\n              _context.next = 5;\n              break;\n\n            case 26:\n              ++i;\n              _context.next = 3;\n              break;\n\n            case 29:\n              ci = clusters[closest.i];\n              cj = clusters[closest.j];\n              merged = ci.merge(cj);\n\n              clusters.splice(closest.i, 1);\n              clusters.splice(closest.j, 1);\n              clusters.push(merged);\n\n              _context.next = 37;\n              return true;\n\n            case 37:\n              _context.next = 0;\n              break;\n\n            case 39:\n\n              state.next();\n\n            case 40:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _marked[0], this);\n    }\n\n    /**\n     * Mouse actions\n     */\n    (function () {\n      var validatePos = function validatePos(pos) {\n        return pos.x >= 0 && pos.x <= CANVAS_SIZE && pos.y >= 0 && pos.y <= CANVAS_SIZE;\n      };\n\n      var lastMousePointPosition = null;\n      s.mousePressed = function () {\n        if (!state.isCurrent('CREATE_POINTS')) {\n          return;\n        }\n\n        var pos = s.createVector(s.mouseX, s.mouseY);\n\n        if (!validatePos(pos)) {\n          return;\n        }\n\n        points.push(new Point(pos, points.length));\n        lastMousePointPosition = pos;\n      };\n\n      s.mouseMoved = function () {\n        if (!state.isCurrent('CREATE_POINTS') || !lastMousePointPosition) {\n          return;\n        }\n\n        var pos = s.createVector(s.mouseX, s.mouseY);\n\n        if (!validatePos(pos)) {\n          return;\n        }\n\n        if (pos.dist(lastMousePointPosition) < 15) {\n          return;\n        }\n\n        points.push(new Point(pos, points.length));\n        lastMousePointPosition = pos;\n      };\n\n      s.mouseReleased = function () {\n        lastMousePointPosition = null;\n      };\n    })();\n\n    function setupControls() {\n      var instruction = s.createP();\n      instruction.parent('controls');\n      var buttonNext = s.createButton();\n      buttonNext.parent('controls');\n\n      var onClick = function onClick() {};\n\n      buttonNext.mousePressed(function () {\n        return onClick();\n      });\n\n      state.on('ENTER_CREATE_POINTS', function () {\n        instruction.html('Click in the canvas or drag the mouse to create new points.');\n        buttonNext.html('Start clustering');\n        onClick = function onClick() {\n          state.nextIfCurrent('CREATE_POINTS');\n        };\n      });\n\n      state.on('LEAVE_CREATE_POINTS', function () {\n        onClick = null;\n        instruction.remove();\n        buttonNext.remove();\n      });\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 88:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultConfig = undefined;\nexports.createDefaultSketch = createDefaultSketch;\nexports.default = createSketch;\n\nvar _State = __webpack_require__(119);\n\nvar _State2 = _interopRequireDefault(_State);\n\nvar _Point = __webpack_require__(118);\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _Cluster = __webpack_require__(307);\n\nvar _Cluster2 = _interopRequireDefault(_Cluster);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultConfig = exports.defaultConfig = {\n  NUM_CLUSTERS: 5,\n  NUM_POINTS: 1000,\n  NUM_HOTSPOTS: 5,\n  HOTSPOT_NOISE: .05,\n  ACTIONS_PER_FRAME: 10,\n  CANVAS_SIZE: 750\n};\n\nfunction createDefaultSketch() {\n  return createSketch(defaultConfig);\n}\n\nfunction createSketch(config) {\n  var NUM_CLUSTERS = config.NUM_CLUSTERS,\n      NUM_POINTS = config.NUM_POINTS,\n      NUM_HOTSPOTS = config.NUM_HOTSPOTS,\n      HOTSPOT_NOISE = config.HOTSPOT_NOISE,\n      ACTIONS_PER_FRAME = config.ACTIONS_PER_FRAME,\n      CANVAS_SIZE = config.CANVAS_SIZE;\n\n\n  return function sketch(s) {\n    var _marked = [assignPoints, updateClusterCenters, clusterer].map(regeneratorRuntime.mark);\n\n    var Point = (0, _Point2.default)(s);\n    var Cluster = (0, _Cluster2.default)(s);\n\n    var clusters = [];\n    var points = [];\n\n    var state = new _State2.default(['CREATE_POINTS', 'CREATE_CLUSTERS', 'DO_CLUSTERING', 'FINISHED']);\n\n    var generator = void 0;\n\n    /**\n     * SETUP\n     */\n    s.setup = function () {\n      var canvas = s.createCanvas(CANVAS_SIZE, CANVAS_SIZE);\n      canvas.parent('canvas-container');\n\n      setupControls();\n\n      state.on('ENTER_CREATE_CLUSTERS', function () {\n        createClusters();\n      });\n\n      state.on('ENTER_DO_CLUSTERING', function () {\n        generator = clusterer();\n      });\n\n      state.on('ENTER_CREATE_POINTS', function () {\n        if (NUM_HOTSPOTS >= 1) {\n          points = Point.createHotspotPoints(NUM_POINTS, NUM_HOTSPOTS, HOTSPOT_NOISE);\n        } else {\n          points = Point.createRandomPoints(NUM_POINTS);\n        }\n      });\n\n      var btnFinishPoints = s.createButton('Finish setting points');\n      btnFinishPoints.mousePressed(function () {\n        state.nextIfCurrent('CREATE_POINTS');\n      });\n\n      state.init();\n    };\n\n    /**\n     * DRAW\n     */\n    s.draw = function () {\n      s.background(0);\n      points.forEach(function (p) {\n        return p.draw();\n      });\n      clusters.forEach(function (c) {\n        return c.draw();\n      });\n\n      if (state.isCurrent('DO_CLUSTERING')) {\n        for (var i = 0; i < ACTIONS_PER_FRAME; ++i) {\n          generator.next();\n        }\n      }\n    };\n\n    /**\n     * Mouse actions\n     */\n    (function () {\n      var validatePos = function validatePos(pos) {\n        return pos.x >= 0 && pos.x <= CANVAS_SIZE && pos.y >= 0 && pos.y <= CANVAS_SIZE;\n      };\n\n      var lastMousePointPosition = null;\n      s.mousePressed = function () {\n        if (state.isCurrent('CREATE_CLUSTERS')) {\n          createCustomCluster(s.mouseX, s.mouseY);\n          return;\n        }\n\n        var pos = s.createVector(s.mouseX, s.mouseY);\n\n        if (!validatePos(pos)) {\n          return;\n        }\n\n        points.push(new Point(pos));\n        lastMousePointPosition = pos;\n      };\n\n      s.mouseMoved = function () {\n        if (state.isCurrent('CREATE_CLUSTERS')) {\n          return;\n        }\n\n        if (!lastMousePointPosition) {\n          return;\n        }\n\n        var pos = s.createVector(s.mouseX, s.mouseY);\n\n        if (!validatePos(pos)) {\n          return;\n        }\n\n        if (pos.dist(lastMousePointPosition) < 15) {\n          return;\n        }\n\n        points.push(new Point(pos));\n        lastMousePointPosition = pos;\n      };\n\n      s.mouseReleased = function () {\n        lastMousePointPosition = null;\n      };\n    })();\n\n    var createClusters = function createClusters() {\n      s.colorMode(s.HSB, 255, 255, 255, 255);\n      for (var i = 0; i < NUM_CLUSTERS; ++i) {\n        var color = s.color(i * 73 % 256, 255, 255);\n        var center = points[Math.floor(s.random(points.length))];\n        clusters.push(new Cluster(center.pos, color));\n      }\n      s.colorMode(s.RGB, 255, 255, 255, 255);\n    };\n\n    var createCustomCluster = function createCustomCluster(x, y) {\n      s.colorMode(s.HSB, 255, 255, 255, 255);\n      var pos = s.createVector(x, y);\n      var color = s.color(s.random(230), 255, 255, 255);\n      clusters.push(new Cluster(pos, color));\n      s.colorMode(s.RGB, 255, 255, 255, 255);\n    };\n\n    function assignPoints() {\n      var _this = this;\n\n      var changes, _loop, i;\n\n      return regeneratorRuntime.wrap(function assignPoints$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              changes = 0;\n              _loop = regeneratorRuntime.mark(function _loop(i) {\n                var p, closest, hasChanged;\n                return regeneratorRuntime.wrap(function _loop$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        p = points[i];\n                        closest = {\n                          cluster: null,\n                          distance: Infinity\n                        };\n\n\n                        clusters.forEach(function (c) {\n                          var dist = c.center.dist(p.pos);\n                          if (dist < closest.distance) {\n                            closest = {\n                              cluster: c,\n                              distance: dist\n                            };\n                          }\n                        });\n\n                        hasChanged = p.cluster !== closest.cluster;\n\n\n                        if (hasChanged) {\n                          changes++;\n                        }\n\n                        p.cluster = closest.cluster;\n\n                        if (!hasChanged) {\n                          _context.next = 9;\n                          break;\n                        }\n\n                        _context.next = 9;\n                        return true;\n\n                      case 9:\n                      case 'end':\n                        return _context.stop();\n                    }\n                  }\n                }, _loop, _this);\n              });\n              i = 0;\n\n            case 3:\n              if (!(i < points.length)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.delegateYield(_loop(i), 't0', 5);\n\n            case 5:\n              ++i;\n              _context2.next = 3;\n              break;\n\n            case 8:\n              return _context2.abrupt('return', changes);\n\n            case 9:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _marked[0], this);\n    }\n\n    function updateClusterCenters() {\n      var _this2 = this;\n\n      var _loop2, _i, _ret2;\n\n      return regeneratorRuntime.wrap(function updateClusterCenters$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _loop2 = regeneratorRuntime.mark(function _loop2(_i) {\n                var c, clusterPoints;\n                return regeneratorRuntime.wrap(function _loop2$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        c = clusters[_i];\n                        clusterPoints = points.filter(function (p) {\n                          return p.cluster === c;\n                        });\n\n                        if (!(clusterPoints.length < 1)) {\n                          _context3.next = 4;\n                          break;\n                        }\n\n                        return _context3.abrupt('return', 'continue');\n\n                      case 4:\n\n                        c.center = clusterPoints.reduce(function (acc, p) {\n                          return s.createVector(acc.x + p.pos.x / clusterPoints.length, acc.y + p.pos.y / clusterPoints.length);\n                        }, s.createVector(0, 0));\n\n                        _context3.next = 7;\n                        return true;\n\n                      case 7:\n                      case 'end':\n                        return _context3.stop();\n                    }\n                  }\n                }, _loop2, _this2);\n              });\n              _i = 0;\n\n            case 2:\n              if (!(_i < clusters.length)) {\n                _context4.next = 10;\n                break;\n              }\n\n              return _context4.delegateYield(_loop2(_i), 't0', 4);\n\n            case 4:\n              _ret2 = _context4.t0;\n\n              if (!(_ret2 === 'continue')) {\n                _context4.next = 7;\n                break;\n              }\n\n              return _context4.abrupt('continue', 7);\n\n            case 7:\n              ++_i;\n              _context4.next = 2;\n              break;\n\n            case 10:\n            case 'end':\n              return _context4.stop();\n          }\n        }\n      }, _marked[1], this);\n    }\n\n    function clusterer() {\n      return regeneratorRuntime.wrap(function clusterer$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.delegateYield(updateClusterCenters(), 't0', 1);\n\n            case 1:\n              return _context5.delegateYield(assignPoints(), 't1', 2);\n\n            case 2:\n              if (true) {\n                _context5.next = 0;\n                break;\n              }\n\n            case 3:\n            case 'end':\n              return _context5.stop();\n          }\n        }\n      }, _marked[2], this);\n    }\n\n    function setupControls() {\n      var instruction = s.createP();\n      instruction.parent('#controls');\n      var buttonNext = s.createButton();\n      buttonNext.parent('#controls');\n\n      var onClick = function onClick() {};\n\n      buttonNext.mousePressed(function () {\n        if (onClick) {\n          onClick();\n        }\n      });\n\n      state.on('ENTER_CREATE_POINTS', function () {\n        instruction.html('Click in the canvas or drag the mouse to create new points.');\n        buttonNext.html('Finish creating points');\n        onClick = function onClick() {\n          state.nextIfCurrent('CREATE_POINTS');\n        };\n      });\n\n      state.on('ENTER_CREATE_CLUSTERS', function () {\n        instruction.html('Click on points in the canvas to make them the center of a new cluster.');\n        buttonNext.html('Start clustering');\n        onClick = function onClick() {\n          state.nextIfCurrent('CREATE_CLUSTERS');\n        };\n      });\n\n      state.on('ENTER_DO_CLUSTERING', function () {\n        instruction.html('You can still click or drag the mouse in the canvas to create new points.');\n        buttonNext.remove();\n        onClick = function onClick() {};\n      });\n    }\n  };\n}\n\n/***/ })\n\n},[310]);\n\n\n// WEBPACK FOOTER //\n// bundle.f1db52ead2aef6b9a5e0.js","export default function (s) {\n  return class Point {\n\n    static OPACITY = 200;\n\n    constructor(pos, id = null) {\n      this.id = id;\n      this.pos = pos;\n      this.cluster = null;\n    };\n\n    get color() {\n      if (!this.cluster) {\n        return s.color(255, 255, 255, Point.OPACITY);\n      }\n\n      const c = this.cluster.color;\n      return s.color(\n        s.red(c),\n        s.green(c),\n        s.blue(c),\n        Point.OPACITY,\n      );\n    }\n\n    draw() {\n      const color = this.color;\n      s.noStroke();\n      s.fill(color);\n      s.ellipse(this.pos.x, this.pos.y, 5, 5);\n    }\n\n    static createRandomPoints(numPoints) {\n      const points = [];\n      for (let i = 0; i < numPoints; ++i) {\n        const x = s.random(s.width);\n        const y = s.random(s.height);\n        points.push(new Point(s.createVector(x, y), points.length));\n      }\n\n      return points;\n    }\n\n    static createHotspotPoints(numPoints, numHotspots, noise) {\n      if (numHotspots < 1) {\n        return Point.createRandomPoints(numPoints);\n      }\n\n      const randomVector = () => s.createVector(s.random(s.width), s.random(s.height));\n      const distanceBase = s.width / numHotspots;\n\n      const threshold = s.width / (numHotspots * 2);\n      const hotspots = [];\n      for (let added = 0; added < numHotspots;) {\n        const pos = randomVector();\n\n        if (hotspots.findIndex(h => pos.dist(h.pos) < threshold) < 0) {\n          hotspots.push({\n            pos,\n            strength: s.random(),\n          });\n\n          added++;\n        }\n      }\n\n      const points = [];\n      for (let added = 0; added < numPoints;) {\n        if (s.random() < noise) {\n          points.push(new Point(s.createVector(s.random(s.width), s.random(s.height)), points.length));\n          added++;\n          continue;\n        }\n\n        const hotspotIdx = Math.floor(s.random(hotspots.length));\n        const h = hotspots[hotspotIdx];\n\n        if (s.random() > h.strength) {\n          continue;\n        }\n\n        const angle = s.random(s.TWO_PI);\n        const direction = s.createVector(s.sin(angle), s.cos(angle));\n        const distance = distanceBase * s.random() * h.strength;\n        direction.mult(distance);\n        const pos = s.createVector(\n          h.pos.x + direction.x,\n          h.pos.y + direction.y\n        );\n\n        points.push(new Point(pos, points.length));\n        added++;\n      }\n\n      return points;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/Point.js","import EventEmitter from 'events';\n\nexport default class State extends EventEmitter {\n\n  constructor (states) {\n    super();\n\n    this.states = states.map((s, i) => ({\n      id: s,\n      isCurrent: false,\n      order: i,\n    }));\n\n    this.isFinished = false;\n  }\n\n  get current() {\n    return this.states.find(s => s.isCurrent === true);\n  }\n\n  init() {\n    if (this.states.length > 0) {\n      this.states[0].isCurrent = true;\n      this.emit(`ENTER_${this.states[0].id}`);\n    }\n  }\n\n  nextIfCurrent(currentId) {\n    const current = this.current;\n\n    if (!current || current.id !== currentId) {\n      return;\n    }\n\n    this.next();\n  }\n\n  next() {\n    const currentIdx = this.states.findIndex(s => s.isCurrent === true);\n\n    if (currentIdx > -1) {\n      this.states[currentIdx].isCurrent = false;\n      this.emit(`LEAVE_${this.states[currentIdx].id}`);\n    }\n\n    if (currentIdx + 2 > this.states.length) {\n      this.isFinished = true;\n      this.emit('FINISHED');\n      return;\n    }\n\n    this.states[currentIdx + 1].isCurrent = true;\n    this.emit(`ENTER_${this.states[currentIdx + 1].id}`);\n  }\n\n  isCurrent(id) {\n    const current = this.current;\n    return current && current.id === id;\n  }\n\n  doIfState(id, callback) {\n    if (this.isCurrent(id)) {\n      callback();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/State.js","import Quicksettings from 'quicksettings';\n\nimport { defaultConfig as defaultConfigKMeans } from './../k-means';\nimport { defaultConfig as defaultConfigHierarchical } from './../hierarchical';\n\nexport default function createControls(onUpdate) {\n  let config = {\n    ...defaultConfigKMeans,\n    ALGORITHM: 'K_MEANS',\n  };\n\n  const settings = Quicksettings.create(null, null, 'Clustering Parameters', document.getElementById('quicksettings'));\n  settings.setDraggable(false);\n\n  const createUpdateCallback = (title, callback = null) => value => {\n    if (\n      typeof value === 'object'\n      && value.hasOwnProperty('value')\n    ) {\n      value = value.value;\n    }\n\n    const oldValue = config[title];\n    config = {\n      ...config,\n      [title]: value,\n    };\n\n    if (callback) {\n      callback(value, oldValue);\n    }\n  };\n\n  const setControlValue = (name, value) => {\n    const control = settings._controls[name].control;\n    if (control.selectedIndex === undefined) {\n      settings.setValue(name, value);\n      return;\n    }\n\n    const { options } = control;\n    for (let i = 0; i < options.length; ++i) {\n      if (options[i].label === value) {\n        settings.setValue(name, i);\n        break;\n      }\n    }\n  };\n\n  const mergeConfig = newConfig => {\n    const merged = { ...config };\n    Object.keys(newConfig).forEach(key => {\n      merged[key] = newConfig[key];\n      setControlValue(key, merged[key]);\n    });\n\n    config = merged;\n  };\n\n  settings.addDropDown('ALGORITHM', ['K_MEANS', 'HIERARCHICAL'], createUpdateCallback('ALGORITHM', (value, oldValue) => {\n    if (\n      oldValue === 'HIERARCHICAL'\n      && value === 'K_MEANS'\n    ) {\n      settings.showControl('ACTIONS_PER_FRAME');\n      settings.hideControl('DRAW_MODE');\n      settings.hideControl('PROXIMITY_METHOD');\n      mergeConfig(defaultConfigKMeans);\n    } else if (\n      oldValue === 'K_MEANS'\n      && value === 'HIERARCHICAL'\n    ) {\n      settings.hideControl('ACTIONS_PER_FRAME');\n      settings.showControl('DRAW_MODE');\n      settings.showControl('PROXIMITY_METHOD');\n      mergeConfig(defaultConfigHierarchical);\n    }\n  }));\n\n  settings.addDropDown('DRAW_MODE', ['CIRCLES', 'COLORS'], createUpdateCallback('DRAW_MODE'));\n  settings.addDropDown('PROXIMITY_METHOD', ['SINGLE_LINK', 'COMPLETE_LINK', 'AVERAGE', 'CENTROIDS'], createUpdateCallback('PROXIMITY_METHOD'));\n  settings.addRange('NUM_CLUSTERS', 0, 100, 5, 1, createUpdateCallback('NUM_CLUSTERS'));\n  settings.addRange('NUM_POINTS', 0, 5000, 200, 10, createUpdateCallback('NUM_POINTS'));\n  settings.addRange('NUM_HOTSPOTS', 0, 20, 5, 1, createUpdateCallback('NUM_HOTSPOTS'));\n  settings.addRange('HOTSPOT_NOISE', 0, 1, .05, .01, createUpdateCallback('HOTSPOT_NOISE'));\n  settings.addRange('ACTIONS_PER_FRAME', 1, 20, 10, 1, createUpdateCallback('ACTIONS_PER_FRAME'));\n  settings.addRange('CANVAS_SIZE', 500, 1000, 500, 10, createUpdateCallback('CANVAS_SIZE'));\n\n  settings.hideControl('DRAW_MODE');\n  settings.hideControl('PROXIMITY_METHOD');\n\n  const setConfig = newConfig => {\n    Object.keys(newConfig).forEach(key => {\n      const val = newConfig[key];\n      settings.setValue(key, val);\n    });\n  };\n\n  settings.addButton('APPLY', () => onUpdate({ ...config }));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/controls/index.js","export default function (s) {\n  return class Cluster {\n    constructor(center, color) {\n      this.center = center;\n      this.color = color;\n    }\n\n    draw() {\n      s.fill(this.color);\n      s.ellipse(this.center.x, this.center.y, 10, 10);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/Cluster.js","export default function (s) {\n\n  function* clusterIdsGenerator () {\n    for (let i = 0; true; ++i) {\n      yield i;\n    }\n  }\n\n  const clusterIds = clusterIdsGenerator();\n\n  return class Cluster {\n    constructor(color, point = null) {\n      this.id = clusterIds.next().value;\n      this.color = color;\n      this.children = [];\n      this.parent = null;\n      this.point = point;\n\n      this.points = [];\n      this.center = null;\n      this.radius = 0;\n    }\n\n    lock() {\n      this.points = this.retrievePoints();\n      this.center = this.createCenter();\n      this.radius = this.createRadius();\n    }\n\n    retrievePoints() {\n      if (this.point) {\n        return [this.point];\n      }\n\n      return this.children.reduce((points, child) => points.concat(child.retrievePoints()), []);\n    }\n\n    createCenter() {\n      if (this.point) {\n        return this.point.pos;\n      }\n\n      return this.points.reduce((center, p) => s.createVector(\n        center.x + (p.pos.x / this.points.length),\n        center.y + (p.pos.y / this.points.length)\n      ), s.createVector(0, 0));\n    }\n\n    createRadius(center) {\n      return this.points.reduce((r, p) => Math.max(r, p.pos.dist(this.center)), 0);\n    }\n\n    draw(color = null, drawMode, drawShape = false) {\n      color = drawMode === 'CIRCLES' || color === null\n        ? this.color\n        : color;\n\n      if (this.point) {\n        s.fill(color);\n        s.noStroke();\n        s.ellipse(this.point.pos.x, this.point.pos.y, 5, 5);\n      } else {\n        if (drawMode === 'CIRCLES') {\n          s.fill(s.color(\n            s.red(color),\n            s.green(color),\n            s.blue(color),\n            50\n          ));\n\n          s.ellipseMode(s.RADIUS);\n          s.ellipse(this.center.x, this.center.y, this.radius, this.radius);\n          s.ellipseMode(s.CENTER);\n        }\n\n        this.children.forEach(c => c.draw(color, drawMode));\n\n        if (drawShape) {\n          s.noFill();\n          s.stroke(this.color);\n          s.strokeWeight(2);\n          s.ellipseMode(s.RADIUS);\n          s.ellipse(this.center.x, this.center.y, this.radius);\n          s.ellipseMode(s.CENTER);\n          s.noStroke();\n          s.strokeWeight(0);\n        }\n      }\n    }\n\n    merge(other) {\n      s.colorMode(s.HSB, 255, 255, 255, 255);\n      const mostPoints = this.points.length > other.points.length ? this : other;\n      const color = s.color(\n        s.hue(mostPoints.color),\n        255,\n        255,\n        255,\n      );\n\n      const cluster = new Cluster(color);\n      s.colorMode(s.RGB, 255, 255, 255, 255);\n      cluster.children.push(this);\n      cluster.children.push(other);\n\n      this.parent = cluster;\n      other.parent = cluster;\n\n      cluster.lock();\n      return cluster;\n    }\n\n    proximitySingleLink(other, matrix) {\n      const thisPoints = this.points;\n      const otherPoints = other.points;\n\n      let min = Infinity;\n      for (let i = 0; i < thisPoints.length; ++i) {\n        const pi = thisPoints[i];\n        for (let j = 0; j < otherPoints.length; ++j) {\n          const pj = otherPoints[j];\n          const prox = matrix.get(pi.id, pj.id);\n\n          if (prox < min) {\n            min = prox;\n          }\n        }\n      }\n\n      return min;\n    }\n\n    proximityCompleteLink(other, matrix) {\n      const thisPoints = this.points;\n      const otherPoints = other.points;\n\n      let max = 0;\n      for (let i = 0; i < thisPoints.length; ++i) {\n        const pi = thisPoints[i];\n        for (let j = 0; j < otherPoints.length; ++j) {\n          const pj = otherPoints[j];\n          const prox = matrix.get(pi.id, pj.id);\n\n          if (prox > max) {\n            max = prox;\n          }\n        }\n      }\n\n      return max;\n    }\n\n    proximityAverage(other, matrix) {\n      let sum = 0;\n      for (let i = 0; i < this.points.length; ++i) {\n        const pi = this.points[i];\n        for (let j = 0; j < other.points.length; ++j) {\n          const pj = other.points[j];\n          sum += matrix.get(pi.id, pj.id);\n        }\n      }\n\n      return sum / (this.points.length * other.points.length);\n    }\n\n    proximityCentroid(other) {\n      return this.center.dist(other.center);\n    }\n\n    static createInitialClusters(points) {\n      s.colorMode(s.HSB, 255, 255, 255, 255);\n      const clusters = points.map(p => {\n        const c = new Cluster(s.color(Math.floor(s.random(256)), 255, 255, 255), p);\n        c.lock();\n        return c;\n      });\n      s.colorMode(s.RGB, 255, 255, 255, 255);\n      return clusters;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hierarchical/Cluster.js","export default class ProximityMatrix {\n  constructor(matrix = {}) {\n    this.matrix = matrix;\n  }\n\n  get(i, j) {\n    if (\n      this.matrix.hasOwnProperty(i)\n      && this.matrix[i].hasOwnProperty(j)\n    ) {\n      return this.matrix[i][j];\n    }\n\n    return null;\n  }\n\n  set(i, j, value) {\n    if (!this.matrix.hasOwnProperty(i)) {\n      this.matrix[i] = {};\n    }\n\n    this.matrix[i][j] = value;\n\n    if (!this.matrix.hasOwnProperty(j)) {\n      this.matrix[j] = {};\n    }\n\n    this.matrix[j][i] = value;\n  }\n\n  static createFromPoints(points) {\n    const matrix = new ProximityMatrix();\n\n    for (let i = 0; i < points.length; ++i) {\n      const pi = points[i];\n      for (let j = 0; j <= i; ++j) {\n        const pj = points[j];\n        const dist = pi.pos.dist(pj.pos);\n\n        matrix.set(pi.id, pj.id, dist);\n      }\n    }\n\n    return matrix;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hierarchical/ProximityMatrix.js","import p5 from 'p5';\nimport 'p5/lib/addons/p5.dom';\nimport 'babel-polyfill';\n\nimport createSketchHierarchical from './hierarchical';\nimport createSketchKMeans, { createDefaultSketch } from './k-means';\nimport createControls from './controls';\n\nlet currentSketch = new p5(createDefaultSketch());\n\ncreateControls(config => {\n  currentSketch.remove();\n\n  switch (config.ALGORITHM) {\n    case 'K_MEANS':\n      currentSketch = new p5(createSketchKMeans(config));\n      break;\n\n    case 'HIERARCHICAL':\n      currentSketch = new p5(createSketchHierarchical(config));\n      break;\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import State from './../common/State';\nimport ProximityMatrix from './ProximityMatrix';\nimport createPointClass from './../common/Point';\nimport createClusterClass from './Cluster';\n\nexport const defaultConfig = {\n  CANVAS_SIZE: 750,\n  NUM_POINTS: 0,\n  NUM_HOTSPOTS: 5,\n  HOTSPOT_NOISE: .05,\n  NUM_CLUSTERS: 5,\n  DRAW_MODE: 'CIRCLES',\n  PROXIMITY_METHOD: 'SINGLE_LINK',\n};\n\nexport function createDefaultSketch() {\n  return createSketch(defaultConfig);\n}\n\nexport default function createSketch(config) {\n  const {\n    CANVAS_SIZE,\n    NUM_POINTS,\n    NUM_HOTSPOTS,\n    HOTSPOT_NOISE,\n    NUM_CLUSTERS,\n    DRAW_MODE,\n    PROXIMITY_METHOD,\n  } = config;\n\n  return function (s) {\n    const Point = createPointClass(s);\n    const Cluster = createClusterClass(s);\n    const state = new State(['CREATE_POINTS', 'DO_CLUSTERING', 'FINISHED_CLUSTERING']);\n\n    let points = [];\n    let clusters = [];\n    let generator;\n    let proximityMatrix = null;\n    let clusterProximityMatrix = null;\n    let clustersLabel = null;\n\n    s.setup = () => {\n      const canvas = s.createCanvas(CANVAS_SIZE, CANVAS_SIZE);\n      canvas.parent('canvas-container');\n\n      setupControls();\n\n      state.on('ENTER_CREATE_POINTS', () => {\n        if (NUM_POINTS < 1) {\n          return;\n        }\n\n        if (NUM_HOTSPOTS < 1) {\n          points = Point.createRandomPoints(NUM_POINTS);\n        } else {\n          points = Point.createHotspotPoints(NUM_POINTS, NUM_HOTSPOTS, HOTSPOT_NOISE);\n        }\n      });\n\n      state.on('LEAVE_CREATE_POINTS', () => {\n        clusters = Cluster.createInitialClusters(points);\n        proximityMatrix = ProximityMatrix.createFromPoints(points);\n        clusterProximityMatrix = new ProximityMatrix();\n\n        clustersLabel = s.createP();\n        clustersLabel.parent('controls');\n      });\n\n      state.init();\n\n      generator = clusterer();\n    };\n\n    s.draw = () => {\n      s.background(s.color(0, 0, 0, 255));\n\n      if (state.isCurrent('CREATE_POINTS')) {\n        points.forEach(p => p.draw());\n      } else {\n        const drawShape = DRAW_MODE === 'COLORS' && state.isCurrent('FINISHED_CLUSTERING');\n        clusters.forEach(c => c.draw(null, DRAW_MODE, drawShape));\n        clustersLabel.html(`${clusters.length} Clusters`);\n        generator.next();\n      }\n    };\n\n    function* clusterer() {\n      while (clusters.length > NUM_CLUSTERS) {\n        let closest = {\n          i: null,\n          j: null,\n          prox: Infinity,\n        };\n\n        for (let i = 0; i < clusters.length; ++i) {\n          for (let j = 0; j < i; ++j) {\n            const ci = clusters[i];\n            const cj = clusters[j];\n\n            let prox = clusterProximityMatrix.get(ci.id, cj.id);\n\n            if (prox === null) {\n              switch (PROXIMITY_METHOD) {\n                case 'COMPLETE_LINK':\n                  prox = ci.proximityCompleteLink(cj, proximityMatrix);\n                  break;\n\n                case 'AVERAGE':\n                  prox = ci.proximityAverage(cj, proximityMatrix);\n                  break;\n\n                case 'CENTROIDS':\n                  prox = ci.proximityCentroid(cj);\n                  break;\n\n                default:\n                  prox = ci.proximitySingleLink(cj, proximityMatrix);\n                  break;\n              }\n\n              clusterProximityMatrix.set(ci.id, cj.id, prox);\n            }\n\n            if (prox < closest.prox) {\n              closest = { i, j, prox };\n            }\n          }\n        }\n\n        const ci = clusters[closest.i];\n        const cj = clusters[closest.j];\n        const merged = ci.merge(cj);\n        clusters.splice(closest.i, 1);\n        clusters.splice(closest.j, 1);\n        clusters.push(merged);\n\n        yield true;\n      }\n\n      state.next();\n    }\n\n    /**\n     * Mouse actions\n     */\n    (() => {\n      const validatePos = pos => pos.x >= 0 && pos.x <= CANVAS_SIZE && pos.y >= 0 && pos.y <= CANVAS_SIZE;\n\n      let lastMousePointPosition = null;\n      s.mousePressed = () => {\n        if (!state.isCurrent('CREATE_POINTS')) {\n          return;\n        }\n\n        const pos = s.createVector(s.mouseX, s.mouseY);\n\n        if (!validatePos(pos)) {\n          return;\n        }\n\n        points.push(new Point(pos, points.length));\n        lastMousePointPosition = pos;\n      };\n\n      s.mouseMoved = () => {\n        if (\n          !state.isCurrent('CREATE_POINTS')\n          || !lastMousePointPosition\n        ) {\n          return;\n        }\n\n        const pos = s.createVector(s.mouseX, s.mouseY);\n\n        if (!validatePos(pos)) {\n          return;\n        }\n\n        if (pos.dist(lastMousePointPosition) < 15) {\n          return;\n        }\n\n        points.push(new Point(pos, points.length));\n        lastMousePointPosition = pos;\n      };\n\n      s.mouseReleased = () => {\n        lastMousePointPosition = null;\n      };\n    })();\n\n    function setupControls() {\n      const instruction = s.createP();\n      instruction.parent('controls');\n      const buttonNext = s.createButton();\n      buttonNext.parent('controls');\n\n      let onClick = () => {};\n\n      buttonNext.mousePressed(() => onClick());\n\n      state.on('ENTER_CREATE_POINTS', () => {\n        instruction.html('Click in the canvas or drag the mouse to create new points.');\n        buttonNext.html('Start clustering');\n        onClick = () => {\n          state.nextIfCurrent('CREATE_POINTS');\n        };\n      });\n\n      state.on('LEAVE_CREATE_POINTS', () => {\n        onClick = null;\n        instruction.remove();\n        buttonNext.remove();\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hierarchical/index.js","import State from './../common/State';\nimport createPointClass from './../common/Point';\nimport createClusterClass from './../common/Cluster';\n\nexport const defaultConfig = {\n  NUM_CLUSTERS: 5,\n  NUM_POINTS: 1000,\n  NUM_HOTSPOTS: 5,\n  HOTSPOT_NOISE: .05,\n  ACTIONS_PER_FRAME: 10,\n  CANVAS_SIZE: 750,\n};\n\nexport function createDefaultSketch() {\n  return createSketch(defaultConfig);\n}\n\nexport default function createSketch(config) {\n  const {\n    NUM_CLUSTERS,\n    NUM_POINTS,\n    NUM_HOTSPOTS,\n    HOTSPOT_NOISE,\n    ACTIONS_PER_FRAME,\n    CANVAS_SIZE,\n  } = config;\n\n  return function sketch(s) {\n    const Point = createPointClass(s);\n    const Cluster = createClusterClass(s);\n\n    const clusters = [];\n    let points = [];\n\n    const state = new State(['CREATE_POINTS', 'CREATE_CLUSTERS', 'DO_CLUSTERING', 'FINISHED']);\n\n    let generator;\n\n    /**\n     * SETUP\n     */\n    s.setup = () => {\n      const canvas = s.createCanvas(CANVAS_SIZE, CANVAS_SIZE);\n      canvas.parent('canvas-container');\n\n      setupControls();\n\n      state.on('ENTER_CREATE_CLUSTERS', () => {\n        createClusters();\n      });\n\n      state.on('ENTER_DO_CLUSTERING', () => {\n        generator = clusterer();\n      });\n\n      state.on('ENTER_CREATE_POINTS', () => {\n        if (NUM_HOTSPOTS >= 1) {\n          points = Point.createHotspotPoints(NUM_POINTS, NUM_HOTSPOTS, HOTSPOT_NOISE);\n        } else {\n          points = Point.createRandomPoints(NUM_POINTS);\n        }\n      });\n\n      const btnFinishPoints = s.createButton('Finish setting points');\n      btnFinishPoints.mousePressed(() => {\n        state.nextIfCurrent('CREATE_POINTS');\n      });\n\n      state.init();\n    };\n\n    /**\n     * DRAW\n     */\n    s.draw = () => {\n      s.background(0);\n      points.forEach(p => p.draw());\n      clusters.forEach(c => c.draw());\n\n      if (state.isCurrent('DO_CLUSTERING')) {\n        for (let i = 0; i < ACTIONS_PER_FRAME; ++i) {\n          generator.next();\n        }\n      }\n    };\n\n    /**\n     * Mouse actions\n     */\n    (() => {\n      const validatePos = pos => pos.x >= 0 && pos.x <= CANVAS_SIZE && pos.y >= 0 && pos.y <= CANVAS_SIZE;\n\n      let lastMousePointPosition = null;\n      s.mousePressed = () => {\n        if (state.isCurrent('CREATE_CLUSTERS')) {\n          createCustomCluster(s.mouseX, s.mouseY);\n          return;\n        }\n\n        const pos = s.createVector(s.mouseX, s.mouseY);\n\n        if (!validatePos(pos)) {\n          return;\n        }\n\n        points.push(new Point(pos));\n        lastMousePointPosition = pos;\n      };\n\n      s.mouseMoved = () => {\n        if (state.isCurrent('CREATE_CLUSTERS')) {\n          return;\n        }\n\n        if (!lastMousePointPosition) {\n          return;\n        }\n\n        const pos = s.createVector(s.mouseX, s.mouseY);\n\n        if (!validatePos(pos)) {\n          return;\n        }\n\n        if (pos.dist(lastMousePointPosition) < 15) {\n          return;\n        }\n\n        points.push(new Point(pos));\n        lastMousePointPosition = pos;\n      };\n\n      s.mouseReleased = () => {\n        lastMousePointPosition = null;\n      };\n\n    })();\n\n    const createClusters = () => {\n      s.colorMode(s.HSB, 255, 255, 255, 255);\n      for (let i = 0; i < NUM_CLUSTERS; ++i) {\n        const color = s.color(i * 73 % 256, 255, 255);\n        const center = points[Math.floor(s.random(points.length))];\n        clusters.push(new Cluster(center.pos, color));\n      }\n      s.colorMode(s.RGB, 255, 255, 255, 255);\n    };\n\n    const createCustomCluster = (x, y) => {\n      s.colorMode(s.HSB, 255, 255, 255, 255);\n      const pos = s.createVector(x, y);\n      const color = s.color(s.random(230), 255, 255, 255);\n      clusters.push(new Cluster(pos, color));\n      s.colorMode(s.RGB, 255, 255, 255, 255);\n    };\n\n    function* assignPoints () {\n      let changes = 0;\n      for (let i = 0; i < points.length; ++i) {\n        const p = points[i];\n\n        let closest = {\n          cluster: null,\n          distance: Infinity,\n        };\n\n        clusters.forEach(c => {\n          const dist = c.center.dist(p.pos);\n          if (dist < closest.distance) {\n            closest = {\n              cluster: c,\n              distance: dist,\n            };\n          }\n        });\n\n        const hasChanged = p.cluster !== closest.cluster;\n\n        if (hasChanged) {\n          changes++;\n        }\n\n        p.cluster = closest.cluster;\n\n        if (hasChanged) {\n          yield true;\n        }\n      }\n\n      return changes;\n    }\n\n    function* updateClusterCenters() {\n      for (let i = 0; i < clusters.length; ++i) {\n        const c = clusters[i];\n\n        const clusterPoints = points.filter(p => p.cluster === c);\n\n        if (clusterPoints.length < 1) {\n          continue;\n        }\n\n        c.center = clusterPoints.reduce(\n          (acc, p) => s.createVector(acc.x + (p.pos.x / clusterPoints.length), acc.y + (p.pos.y / clusterPoints.length)),\n          s.createVector(0, 0)\n        );\n\n        yield true;\n      }\n    }\n\n    function* clusterer () {\n      do {\n        yield* updateClusterCenters();\n        yield* assignPoints();\n      } while (true);\n    }\n\n    function setupControls() {\n      const instruction = s.createP();\n      instruction.parent('#controls');\n      const buttonNext = s.createButton();\n      buttonNext.parent('#controls');\n\n      let onClick = () => {};\n\n      buttonNext.mousePressed(() => {\n        if (onClick) {\n          onClick();\n        }\n      });\n\n      state.on('ENTER_CREATE_POINTS', () => {\n        instruction.html('Click in the canvas or drag the mouse to create new points.');\n        buttonNext.html('Finish creating points');\n        onClick = () => {\n          state.nextIfCurrent('CREATE_POINTS');\n        };\n      });\n\n      state.on('ENTER_CREATE_CLUSTERS', () => {\n        instruction.html('Click on points in the canvas to make them the center of a new cluster.');\n        buttonNext.html('Start clustering');\n        onClick = () => {\n          state.nextIfCurrent('CREATE_CLUSTERS');\n        };\n      });\n\n      state.on('ENTER_DO_CLUSTERING', () => {\n        instruction.html('You can still click or drag the mouse in the canvas to create new points.');\n        buttonNext.remove();\n        onClick = () => {};\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/k-means/index.js"],"sourceRoot":""}